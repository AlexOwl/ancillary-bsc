!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("ethers"),require("@ethersproject/logger"),require("@ethersproject/providers"),require("@ethersproject/properties")):"function"==typeof define&&define.amd?define(["exports","ethers","@ethersproject/logger","@ethersproject/providers","@ethersproject/properties"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self)._ethers_bsc={},e.ethers,e.logger$4,e.providers)}(this,(function(e,r,t,n){"use strict";const s="@ethers-ancillary/bsc@0.0.1",o=new r.ethers.utils.Logger(s),i=[{name:"bsc-mainnet",chainId:56},{name:"bsc-testnet",chainId:97}];function a(e){if(null==e)return null;if("number"==typeof e){const r=i.filter((r=>r.chainId===e));return r.length?{name:r[0].name,chainId:r[0].chainId}:{name:"unknown",chainId:e}}if("string"==typeof e){const r=i.filter((r=>r.name===e));return r.length?{name:r[0].name,chainId:r[0].chainId}:null}if("string"==typeof e.name&&"number"==typeof e.chainId){const r=a(e.name),t=a(e.chainId);if(null==r&&null==t)return{name:e.name,chainId:e.chainId};if(r&&t&&r.name===t.name&&r.chainId===t.chainId)return r}return o.throwArgumentError("network chainId mismatch","network",e)}const c=new r.ethers.utils.Logger(s),u="EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9";class l extends r.ethers.providers.EtherscanProvider{constructor(e,t){const n=a(null==e?"bsc-mainnet":e);switch((n||{}).name){case"bsc-mainnet":case"bsc-testnet":break;default:c.throwError("unsupported network",r.ethers.utils.Logger.errors.UNSUPPORTED_OPERATION,{network:e})}super(n,t||u)}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"bsc-mainnet":return"http://api.bscscan.com";case"bsc-testnet":return"http://api-testnet.bscscan.com"}return c.throwArgumentError("unsupported network","network",this.network)}isCommunityResource(){return this.apiKey===u}}const p=new t.Logger(s),d="6136201a7bad1500343e248d";class h extends n.PocketProvider{constructor(e,r){const n=a(e||"bsc-mainnet");n||p.throwError("unsupported network",t.Logger.errors.INVALID_ARGUMENT,{argument:"network",value:e}),r||(r={applicationId:d,loadBalancer:!0}),super(n,r)}static getUrl(e,r){let n=null;switch(e?e.name:"unknown"){case"bsc-mainnet":n="bsc-mainnet.gateway.pokt.network";break;default:p.throwError("unsupported network",t.Logger.errors.INVALID_ARGUMENT,{argument:"network",value:e})}const s={url:`https://${n}/v1/lb/${r.applicationId}`,headers:{}};return null!=r.applicationSecretKey&&(s.user="",s.password=r.applicationSecretKey),s}isCommunityResource(){return this.applicationId===d}}const m=new t.Logger(s);class g extends n.UrlJsonRpcProvider{constructor(e,r){const n=a(e||"bsc-mainnet");switch((n||{}).name){case"bsc-mainnet":case"bsc-testnet":break;default:m.throwError("unsupported network",t.Logger.errors.UNSUPPORTED_OPERATION,{network:e})}null==r&&m.throwError("no default apiKey",t.Logger.errors.INVALID_ARGUMENT,{argument:"apiKey",value:r}),super(n,r)}static getApiKey(e){const r={apiKey:null,region:"nyc"};return"string"==typeof e?r.apiKey=e:(null!=e.apiKey&&(r.apiKey=e.apiKey),null!=e.region&&(r.region=r.region)),null==r.apiKey&&m.throwError("apiKey is invalid",t.Logger.errors.INVALID_ARGUMENT,{argument:"apiKey",value:e}),r}static getUrl(e,r){let n=null;switch(e?e.name:"unknown"){case"bsc-mainnet":n="bsc/mainnet";break;case"bsc-testnet":n="bsc/testnet";break;default:m.throwError("unsupported network",t.Logger.errors.INVALID_ARGUMENT,{argument:"network",value:e})}const s={url:`https://speedy-nodes-${r.region}.moralis.io/${r.apiKey}/${n}`,headers:{}};return s}isCommunityResource(){return!1}}e.BscMoralisProvider=g,e.BscPocketProvider=h,e.BscscanProvider=l,e.getDefaultProvider=function(e,t){const n=[];return n.push(new l(e,(t||{}).bscscan||void 0)),n.push(new h(e,(t||{}).bscpocket||void 0)),t&&t.bscmoralis&&("string"==typeof t.bscmoralis||t.bscmoralis.apiKey)&&n.push(new g(e,t.bscmoralis)),new r.ethers.providers.FallbackProvider(n,Math.min(n.length,2))},e.getNetwork=a,Object.defineProperty(e,"__esModule",{value:!0})}));
